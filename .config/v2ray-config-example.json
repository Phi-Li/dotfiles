// Config file of V2Ray. This file follows standard JSON format, with comments support.
// Uncomment entries below to satisfy your needs. Also read our manual for more detail at
// https://www.v2ray.com/
{
    // ## LogObject
    "log": {
        // By default, V2Ray writes access log to stdout.
        "access": "/path/to/access/log/file",
        // By default, V2Ray write error log to stdout.
        "error": "/path/to/error/log/file",
        // Log level, one of "debug", "info", "warning", "error", "none"
        "loglevel": "warning"
    },
    // ## InboundObject
    // List of inbound proxy configurations.
    "inbounds": [
        {
            // Port to listen on. You may need root access if the value is less than 1024.
            "port": 1080,
            // IP address to listen on. Change to "0.0.0.0" to listen on all network interfaces.
            "listen": "127.0.0.1",
            // Protocol name of inbound proxy.
            "protocol": "socks",
            // Tag of the inbound proxy. May be used for routing.
            "tag": "socks-inbound",
            // ### InboundConfigurationObject
            // Settings of the protocol. Varies based on protocol.
            "settings": {
                "auth": "noauth",
                "udp": false,
                "ip": "127.0.0.1"
            },
            // ### StreamSettingsObject
            "streamSettings": {},
            // ### SniffingObject
            // Enable sniffing on TCP connection.
            "sniffing": {
                "enabled": true,
                // Target domain will be overriden to the one carried by the connection, if the connection is HTTP or HTTPS.
                "destOverride": [
                    "http",
                    "tls"
                ]
            },
            // ### AllocateObject
            "allocate": {
                "strategy": "always",
                "refresh": 5,
                "concurrency": 3
            }
        },
        {
            "port": 41592,
            "protocol": "vmess",
            // ## InboundConfigurationObject
            "settings": {
                // ### ClientObject
                "clients": [
                    {
                        "id": "23ad6b10-8d1a-40f7-8ad0-e3e35cd38297",
                        "level": 0,
                        "alterId": 64,
                        "email": "love@v2ray.com"
                    }
                ],
                // ### DetourObject
                "detour": {
                    "to": "tag_to_detour"
                },
                // ### DefaultObject
                "default": {
                    "level": 0,
                    "alterId": 4
                },
                "disableInsecureEncryption": false
            },
            // ## StreamSettingsObject
            "streamSettings": {
                "network": "tcp",
                "security": "tls",
                // ### TLSObject
                "tlsSettings": {
                    "serverName": "v2ray.com",
                    "alpn": [
                        "http/1.1"
                    ],
                    "allowInsecure": false,
                    "allowInsecureCiphers": false,
                    "disableSystemRoot": false,
                    // ### CertificateObject
                    "certificates": [
                        {
                            "usage": "encipherment",
                            "certificateFile": "/path/to/certificate.crt",
                            "keyFile": "/path/to/key.key",
                            "certificate": [
                                "-----BEGIN CERTIFICATE-----",
                                "-----END CERTIFICATE-----"
                            ],
                            "key": [
                                "-----BEGIN RSA PRIVATE KEY-----",
                                "-----END RSA PRIVATE KEY-----"
                            ]
                        }
                    ]
                },
                // ## TcpObject
                "tcpSettings": {
                    // ### NoneHeaderObject
                    "header": {
                        "type": "none"
                    }
                },
                "kcpSettings": {},
                "wsSettings": {},
                "httpSettings": {},
                "dsSettings": {},
                "quicSettings": {},
                // ### SockoptObject
                "sockopt": {
                    "mark": 0,
                    "tcpFastOpen": true,
                    "tproxy": "off"
                }
            }
        },
        {
            "port": 41593,
            "protocol": "vmess",
            "settings": {
                "clients": [
                    {
                        "id": "23ad6b10-8d1a-40f7-8ad0-e3e35cd38297",
                        "level": 0,
                        "alterId": 64
                    }
                ]
            },
            "streamSettings": {
                "network": "tcp",
                "security": "none",
                "tlsSettings": {},
                "tcpSettings": {
                    // ### HttpHeaderObject
                    "header": {
                        "type": "http",
                        // ### HTTPRequestObject
                        "request": {
                            "version": "1.1",
                            "method": "GET",
                            "path": [
                                "/"
                            ],
                            "headers": {
                                "Host": [
                                    "developer.microsoft.com",
                                    "developer.apple.com"
                                ],
                                "User-Agent": [
                                    "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36",
                                    "Mozilla/5.0 (iPhone; CPU iPhone OS 10_0_2 like Mac OS X) AppleWebKit/601.1 (KHTML, like Gecko) CriOS/53.0.2785.109 Mobile/14A456 Safari/601.1.46"
                                ],
                                "Accept-Encoding": [
                                    "gzip, deflate"
                                ],
                                "Connection": [
                                    "keep-alive"
                                ],
                                "Pragma": "no-cache"
                            }
                        },
                        // ### HTTPResponseObject
                        "response": {
                            "version": "1.1",
                            "status": "200",
                            "reason": "OK",
                            "headers": {
                                "Content-Type": [
                                    "application/octet-stream",
                                    "application/pdf",
                                    "application/zip",
                                    "application/x-rar-compressed",
                                    "application/vnd.mspowerpoint",
                                    "video/mpeg",
                                    "video/mp4",
                                    "video/webm",
                                    "video/ogg"
                                ],
                                "Transfer-Encoding": [
                                    "chunked"
                                ],
                                "Connection": [
                                    "keep-alive"
                                ],
                                "Pragma": "no-cache"
                            }
                        }
                    }
                },
                "kcpSettings": {},
                "wsSettings": {},
                "httpSettings": {},
                "dsSettings": {},
                "quicSettings": {},
                "sockopt": {
                    "mark": 0,
                    "tcpFastOpen": true,
                    "tproxy": "off"
                }
            }
        },
        {
            "port": 41594,
            "protocol": "vmess",
            "settings": {
                "clients": [
                    {
                        "id": "23ad6b10-8d1a-40f7-8ad0-e3e35cd38297",
                        "level": 0,
                        "alterId": 64
                    }
                ]
            },
            "streamSettings": {
                "network": "kcp",
                "security": "none",
                "tlsSettings": {},
                "tcpSettings": {},
                "kcpSettings": {
                    "mtu": 1350,
                    "tti": 20,
                    "uplinkCapacity": 20,
                    "downlinkCapacity": 100,
                    "congestion": true,
                    "readBufferSize": 8,
                    "writeBufferSize": 8,
                    // ### HeaderObject
                    "header": {
                        "type": "utp"
                    }
                },
                "wsSettings": {},
                "httpSettings": {},
                "dsSettings": {},
                "quicSettings": {},
                "sockopt": {
                    "mark": 0,
                    "tcpFastOpen": true,
                    "tproxy": "off"
                }
            }
        }
    ],
    // ## OutboundObject
    // List of outbound proxy configurations.
    "outbounds": [
        {
            "sendThrough": "0.0.0.0",
            // Protocol name of the outbound proxy.
            "protocol": "freedom",
            // Settings of the protocol. Varies based on protocol.
            "settings": {},
            // Tag of the outbound. May be used for routing.
            "tag": "direct"
            // ### ProxySettingsObject
            // "proxySettings": {
            //     "tag": "another-outbound-tag"
            // },
        },
        {
            "protocol": "blackhole",
            "settings": {},
            "tag": "blocked"
        },
        {
            "sendThrough": "0.0.0.0",
            "protocol": "vmess",
            "settings": {
                "vnext": [
                    // ### ServerObject
                    {
                        "address": "127.0.0.1",
                        "port": 37192,
                        "users": [
                            // ### UserObject
                            {
                                "id": "27848739-7e62-4138-9fd3-098a63964b6b",
                                "alterId": 4,
                                "level": 0,
                                "security": "auto"
                            }
                        ]
                    }
                ]
            },
            "tag": "",
            "streamSettings": {},
            // ### ProxySettingsObject
            // "proxySettings": {
            //   "tag": "another-outbound-tag"
            // },
            "mux": {
                "enabled": false,
                "concurrency": 8
            }
        }
    ],
    // ## TransportObject
    // Transport is for global transport settings. If you have multiple transports with same settings
    // (say mKCP), you may put it here, instead of in each individual inbound/outbounds.
    //"transport": {},
    // ## RoutingObject
    // Routing controls how traffic from inbounds are sent to outbounds.
    "routing": {
        "domainStrategy": "IPOnDemand",
        // ### RuleObject
        "rules": [
            {
                // Blocks access to private IPs. Remove this if you want to access your router.
                "type": "field",
                "ip": [
                    "geoip:private"
                ],
                "outboundTag": "blocked"
            },
            {
                // Blocks major ads.
                "type": "field",
                "domain": [
                    "geosite:category-ads"
                ],
                "outboundTag": "blocked"
            },
            {
                "type": "field",
                "domain": [
                    "baidu.com",
                    "qq.com",
                    "geosite:cn"
                ],
                "ip": [
                    "0.0.0.0/8",
                    "10.0.0.0/8",
                    "fc00::/7",
                    "fe80::/10",
                    "geoip:cn"
                ],
                "port": "53,443,1000-2000",
                "network": "tcp",
                "source": [
                    "10.0.0.1"
                ],
                "user": [
                    "love@v2ray.com"
                ],
                "inboundTag": [
                    "tag-vmess"
                ],
                "protocol": [
                    "http",
                    "tls",
                    "bittorrent"
                ],
                "attrs": "attrs[':method'] == 'GET'",
                "outboundTag": "direct",
                "balancerTag": "balancer"
            }
        ],
        // ### BalancerObject
        "balancers": [
            {
                "tag": "balancer",
                "selector": []
            }
        ]
    },
    // ## DnsObject
    // Dns settings for domain resolution.
    "dns": {
        // Static hosts, similar to hosts file.
        "hosts": {
            "baidu.com": "127.0.0.1",
            // Match v2ray.com to another domain on CloudFlare. This domain will be used when querying IPs for v2ray.com.
            "domain:v2ray.com": "www.vicemc.net",
            // The following settings help to eliminate DNS poisoning in mainland China.
            // It is safe to comment these out if this is not the case for you.
            "domain:github.io": "pages.github.com",
            "domain:wikipedia.org": "www.wikimedia.org",
            "domain:shadowsocks.org": "electronicsrealm.com"
        },
        "servers": [
            "1.1.1.1",
            {
                "address": "114.114.114.114",
                "port": 53,
                // List of domains that use this DNS first.
                "domains": [
                    "geosite:cn"
                ]
            },
            {
                "address": "1.2.3.4",
                "port": 5353,
                "domains": [
                    "domain:v2ray.com"
                ]
            },
            "8.8.8.8",
            "8.8.4.4",
            "localhost"
        ],
        "clientIp": "1.2.3.4",
        "tag": "dns_inbound"
    },
    // Policy controls some internal behavior of how V2Ray handles connections.
    // It may be on connection level by user levels in 'levels', or global settings in 'system.'
    "policy": {
        // Connection policys by user levels
        "levels": {
            // ### LevelPolicyObject
            "0": {
                "handshake": 4,
                "connIdle": 300,
                // ### 在 HTTP 浏览的场景中，可以将uplinkOnly和downlinkOnly设为0，以提高连接关闭的效率。
                "uplinkOnly": 0,
                "downlinkOnly": 0,
                "statsUserUplink": false,
                "statsUserDownlink": false,
                "bufferSize": 10240
            }
        },
        // ### SystemPolicyObject
        "system": {
            "statsInboundUplink": true,
            "statsInboundDownlink": true
        }
    },
    // ## StatsObject
    // Stats enables internal stats counter.
    // This setting can be used together with Policy and Api. 
    "stats": {},
    // ## ApiObject
    // Api enables gRPC APIs for external programs to communicate with V2Ray instance.
    //"api": {
    //"tag": "api",
    //"services": [
    //  "HandlerService",
    //  "LoggerService",
    //  "StatsService"
    //]
    //},
    // ## ReverseObject
    "reverse": {},
    // You may add other entries to the configuration, but they will not be recognized by V2Ray.
    "other": {}
}